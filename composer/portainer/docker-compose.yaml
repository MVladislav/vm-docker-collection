---
version: "3.8"

services:
  portainer:
    image: portainer/portainer-ce:latest
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role==manager"
      restart_policy:
        condition: on-failure
    ports:
      - target: 9000
        published: ${PORT:-9000}
        protocol: tcp
        mode: host
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - data:/data
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    networks:
      default: {}

  agent:
    image: portainer/agent:latest
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      restart_policy:
        condition: on-failure
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      default: {}

  # registry:
  #   image: registry:latest
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints:
  #         - "node.role==manager"
  #     restart_policy:
  #       condition: on-failure
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
  #   volumes:
  #     - registry:/data
  #   networks:
  #     default: {}

networks:
  default:
    driver: ${NETWORK_MODE:-overlay}

volumes:
  data: {}
  # registry: {}
