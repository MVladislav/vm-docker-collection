#!/bin/bash
set -eo pipefail
shopt -s nullglob

BIND_ADDRESS="0.0.0.0"
PUBLIC_PATH="public"
LOG_DIR="."
DATASTORE_LOCATION="./"
FILESTORE_DIRECTORY="./"
CLIENT_DIR="/velociraptor/clients"

# logging functions
docker_log() {
  local type="$1"
  shift
  # accept argument string or stdin
  local text="$*"
  if [ "$#" -eq 0 ]; then text="$(cat)"; fi
  local dt
  dt="$(date --rfc-3339=seconds)"
  printf '%s [%s] [Entrypoint]: %s\n' "$dt" "$type" "$text"
}

docker_note() {
  docker_log Note "$@"
}
docker_warn() {
  docker_log Warn "$@" >&2
}
docker_error() {
  docker_log ERROR "$@" >&2
  exit 1
}

# usage: file_env VAR [DEFAULT]
#    ie: file_env 'XYZ_DB_PASSWORD' 'example'
# (will allow for "$XYZ_DB_PASSWORD_FILE" to fill in the value of
#  "$XYZ_DB_PASSWORD" from a file, especially for Docker's secrets feature)
file_env() {
  local var="$1"
  local fileVar="${var}_FILE"
  local def="${2:-}"
  if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then
    docker_error "Both $var and $fileVar are set (but are exclusive)"
  fi
  local val="$def"
  if [ "${!var:-}" ]; then
    val="${!var}"
  elif [ "${!fileVar:-}" ]; then
    val="$(<"${!fileVar}")"
  fi
  export "$var"="$val"
  unset "$fileVar"
}

file_env 'VELOX_USER'
file_env 'VELOX_PASSWORD'

# Move binaries into place
cp /opt/velociraptor/linux/velociraptor . && chmod +x velociraptor
mkdir -p $CLIENT_DIR/linux && rsync -a /opt/velociraptor/linux/velociraptor /velociraptor/clients/linux/velociraptor_client
mkdir -p $CLIENT_DIR/mac && rsync -a /opt/velociraptor/mac/velociraptor_client /velociraptor/clients/mac/velociraptor_client
mkdir -p $CLIENT_DIR/windows && rsync -a /opt/velociraptor/windows/velociraptor_client* /velociraptor/clients/windows/

# If no existing server config, set it up
if [ ! -f server.config.yaml ]; then
  ./velociraptor config generate --merge '{"Frontend":{"bind_address":"'$BIND_ADDRESS'","public_path":"'$PUBLIC_PATH'","hostname":"'"$VELOX_FRONTEND_HOSTNAME"'","proxy_header":"X-Forwarded-For","use_plain_http":'$USE_PLAIN_HTTP'},"API":{"bind_address":"'$BIND_ADDRESS'"},"GUI":{"bind_address":"'$BIND_ADDRESS'","proxy_header":"X-Forwarded-For","use_plain_http":'$USE_PLAIN_HTTP'},"Monitoring":{"bind_address":"'$BIND_ADDRESS'"},"Logging":{"output_directory":"'$LOG_DIR'","separate_logs_per_component":true},"Client":{"server_urls":["'"$VELOX_SERVER_URL"'"],"use_self_signed_ssl":true}, "Datastore":{"location":"'$DATASTORE_LOCATION'", "filestore_directory":"'$FILESTORE_DIRECTORY'"}}' >server.config.yaml
  #sed -i "s#https://localhost:8000/#$VELOX_CLIENT_URL#" server.config.yaml
  sed -i 's#/tmp/velociraptor#.#g' server.config.yaml
  ./velociraptor --config server.config.yaml user add "$VELOX_USER" "$VELOX_PASSWORD" --role "$VELOX_ROLE"
fi

# Check Server Certificate Status, Re-generate if it's expiring in 24-hours or less
if true | ./velociraptor --config server.config.yaml config show --json | jq -r .Frontend.certificate | openssl x509 -text -enddate -noout -checkend 86400 >/dev/null; then
  echo "Skipping renewal, certificate is not expired"
else
  echo "Certificate is expired, rotating certificate."
  ./velociraptor --config ./server.config.yaml config rotate_key >/tmp/server.config.yaml
  cp ./server.config.yaml ./server.config.yaml.bak
  mv /tmp/server.config.yaml /velociraptor/.
fi

# Re-generate client config in case server config changed
./velociraptor --config server.config.yaml config client >client.config.yaml

# Repack clients
./velociraptor config repack --exe clients/linux/velociraptor_client client.config.yaml clients/linux/velociraptor_client_repacked
./velociraptor --config client.config.yaml debian client --output clients/linux/velociraptor_client_repacked.deb
./velociraptor --config client.config.yaml rpm client --output clients/linux/velociraptor_client_repacked.rpm
./velociraptor config repack --exe clients/mac/velociraptor_client client.config.yaml clients/mac/velociraptor_client_repacked
./velociraptor config repack --exe clients/windows/velociraptor_client.exe client.config.yaml clients/windows/velociraptor_client_repacked.exe
./velociraptor config repack --msi clients/windows/velociraptor_client.msi client.config.yaml clients/windows/velociraptor_client_repacked.msi

# Start Velocoraptor
./velociraptor --config server.config.yaml frontend -v

# exec "$@"
