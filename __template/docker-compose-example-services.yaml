---
version: "3.8"

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################

  ##############################################################################
  ##############################################################################
  ##############################################################################
  valkey:
    # https://hub.docker.com/r/valkey/valkey
    image: valkey/valkey:${VERSION_VALKEY:-7.2.5-alpine}
    # <<: *basic
    deploy:
      # <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_VALKEY:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_VALKEY:-128M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_VALKEY:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_VALKEY:-32m}
    cap_add:
      - SETGID
      - SETUID
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - valkey:/data
    command: --save 300 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

  ##############################################################################
  ##############################################################################
  ##############################################################################
  postgresql:
    # https://hub.docker.com/_/postgres
    image: postgres:${VERSION_POSTGRESQL:-16.2-alpine3.19}
    # <<: *basic
    deploy:
      # <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_POSTGRESQL:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_POSTGRESQL:-512M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_POSTGRESQL:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_POSTGRESQL:-32m}
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    secrets:
      - postgres_password_file
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgresql}
      POSTGRES_USER: ${POSTGRES_USER:-postgresql}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password_file
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - postgresql:/var/lib/postgresql/data
    networks:
      default: {}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

  ##############################################################################
  ##############################################################################
  ##############################################################################
  mariadb:
    # https://hub.docker.com/_/mariadb
    image: mariadb:${VERSION_MARIADB:-11.3.2}
    # <<: *basic
    deploy:
      # <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_MARIADB:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_MARIADB:-512M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_MARIADB:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_MARIADB:-32m}
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    # ports:
    #   - target: ${PORT_MARIADB:-3306}
    #     published: ${PORT_MARIADB_PUBLISH:-3306}
    #     protocol: tcp
    #     mode: host
    secrets:
      - mariadb_root_password
      - mariadb_user_password
    environment:
      TZ: ${TZ:-Europe/Berlin}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-mariadb}
      MARIADB_USER: ${MARIADB_USER:-mariadb}
      MARIADB_PASSWORD_FILE: /run/secrets/mariadb_user_password
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/mariadb_root_password
      # MARIADB_RANDOM_ROOT_PASSWORD: ${MARIADB_RANDOM_ROOT_PASSWORD:-true}
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - mariadb:/var/lib/mysql
    command:
      - --log-bin=mysql-bin
      - --expire-logs-days=90
    networks:
      default: {}
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh --no-defaults"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

  ##############################################################################
  ## NOTE: for PostgreSQL and MySQL ############################################
  ##############################################################################
  adminer:
    # https://hub.docker.com/_/adminer
    image: adminer:${VERSION_ADMINER:-4.8.1-standalone}
    # <<: *basic
    deploy:
      # <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_ADMINER:-0.25}
          memory: ${RESOURCES_LIMITS_MEMORY_ADMINER:-256M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_ADMINER:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_ADMINER:-32m}
    # ports:
    #   - target: ${PORT_ADMINER:-8080}
    #     published: ${PORT_ADMINER_PUBLISH:-8080}
    #     protocol: tcp
    #     mode: host
    environment:
      ADMINER_DEFAULT_SERVER: mysql # mysql | postgresql
      ADMINER_PLUGINS: "tables-filter tinymce file-upload"
      ADMINER_DESIGN: "hydra"
    # volumes:
    #   - /etc/timezone:/etc/timezone:ro
    #   - /etc/localtime:/etc/localtime:ro
    command: php -S 0.0.0.0:8080 -t /var/www/html
    networks:
      default: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  influxdb:
    # https://hub.docker.com/_/influxdb
    image: influxdb:${VERSION_INFLUXDB:-2.7.5-alpine}
    # <<: *basic
    deploy:
      # <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_INFLUXDB:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_INFLUXDB:-512M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_INFLUXDB:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_INFLUXDB:-32m}
    # ports:
    #   - target: ${PORT_INFLUXDB:-8086}
    #     published: ${PORT_INFLUXDB_PUBLISH:-8086}
    #     protocol: tcp
    #     mode: host
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE:-setup}
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME:-root}
      # DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD:-}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG:-my_orga}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET:-db0}
      # DOCKER_INFLUXDB_INIT_RETENTION: ${DOCKER_INFLUXDB_INIT_RETENTION:-1w}
      # DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:-my-super-secret-auth-token}
    networks:
      default: {}
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - influxdb-storage:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2

################################################################################
################################################################################
################################################################################

volumes:
  valkey: {}
  postgresql: {}
  mariadb: {}
  influxdb-storage: {}
  influxdb-config: {}

secrets:
  postgres_password_file:
    file: config/secrets/postgres_password_file.txt
  mariadb_root_password:
    file: config/secrets/mariadb_root_password.txt
  mariadb_user_password:
    file: config/secrets/mariadb_user_password.txt
