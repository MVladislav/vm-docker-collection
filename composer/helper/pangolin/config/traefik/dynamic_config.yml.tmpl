---
http:
  middlewares:
    # --------------------------------------------------------------------------
    crowdsec:
      plugin:
        crowdsec:
          enabled: true
          logLevel: INFO
          updateIntervalSeconds: 60
          defaultDecisionSeconds: 60
          httpTimeoutSeconds: 10
          crowdsecMode: live
          crowdsecAppsecEnabled: false
          crowdsecAppsecHost: crowdsec:7422
          crowdsecAppsecFailureBlock: true
          crowdsecAppsecUnreachableBlock: true
          crowdsecLapiKey: PANGOLINLAPI1234
          crowdsecLapiHost: crowdsec:8080
          crowdsecLapiScheme: http
          banHTMLFilePath: /etc/traefik/ban.html
          # forwardedHeadersTrustedIPs:
          #   - 127.0.0.0/8
          #   - 10.0.0.0/8
          # clientTrustedIPs:
          #   - 127.0.0.0/8
          #   - 10.0.0.0/8

    # --------------------------------------------------------------------------
    redirect-to-https:
      redirectScheme:
        scheme: https

    # --------------------------------------------------------------------------
    traefik-basic-auth:
      basicAuth:
        usersFile: "/run/secrets/traefik_basicauth_secret"
        realm: "Traefik Basic Auth"

    # --------------------------------------------------------------------------
    default-headers:
      headers:
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        frameDeny: true
        referrerPolicy: "strict-origin-when-cross-origin"
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        # contentSecurityPolicy: "default-src 'self'"
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    # --------------------------------------------------------------------------
    public-whitelist:
      IPAllowList:
        sourceRange:
          - 0.0.0.0/0
          - 127.0.0.0/8
          - 10.0.0.0/8
          - 192.168.0.0/16
          - 172.16.0.0/12

    # --------------------------------------------------------------------------
    public-secured:
      chain:
        middlewares:
          - public-whitelist
          - default-headers

  # ############################################################################
  routers:
    # Traefik
    traefik-router:
      rule: "Host(`<REPLACE_TRAEFIK_DOMAIN>`)" # REPLACE THIS WITH YOUR DOMAIN
      service: api@internal
      entryPoints:
        - websecure
      middlewares:
        - traefik-basic-auth@file
      tls:
        certResolver: letsencrypt

    # # HTTP to HTTPS redirect router
    # main-app-router-redirect:
    #   rule: "Host(`<REPLACE_DASHBOARDURL_DOMAIN>`)" # REPLACE THIS WITH YOUR DOMAIN
    #   service: next-service
    #   entryPoints:
    #     - web
    #   middlewares:
    #     - redirect-to-https

    # Next.js router (handles everything except API and WebSocket paths)
    next-router:
      rule: "Host(`<REPLACE_DASHBOARDURL_DOMAIN>`) && !PathPrefix(`/api/v1`)" # REPLACE THIS WITH YOUR DOMAIN
      service: next-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # API router (handles /api/v1 paths)
    api-router:
      rule: "Host(`<REPLACE_DASHBOARDURL_DOMAIN>`) && PathPrefix(`/api/v1`)" # REPLACE THIS WITH YOUR DOMAIN
      service: api-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # WebSocket router
    ws-router:
      rule: "Host(`<REPLACE_DASHBOARDURL_DOMAIN>`)" # REPLACE THIS WITH YOUR DOMAIN
      service: api-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

  # ############################################################################
  services:
    next-service:
      loadBalancer:
        servers:
          - url: "http://pangolin:3002" # Next.js server

    api-service:
      loadBalancer:
        servers:
          - url: "http://pangolin:3000" # API/WebSocket server
