---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.code-server.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.code-server.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.code-server.tls=true
    - traefik.http.routers.code-server.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.code-server.service=code-server
    - traefik.http.services.code-server.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.code-server.loadbalancer.server.port=${PORT:-8080}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: stop-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-2}
      memory: ${RESOURCES_LIMITS_MEMORY:-2g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_add:
    - CHOWN # Allows changing file ownership (`chown`,`chgrp`)
    - SETGID # Allows setting group ID (`setgid`,`newgrp`,`chgrp`,`setregid()`)
    - SETUID # Allows setting user ID (`setuid`,`su`,`sudo`,`passwd`)
    - FOWNER # Overrides file ownership checks (`chmod`,`kill`)
    - AUDIT_WRITE
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    proxy: {}
  healthcheck:
    disable: true
  tmpfs:
    - /tmp
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  code-server:
    # https://hub.docker.com/r/codercom/code-server
    image: codercom/code-server:${VERSION:-4.105.0-ubuntu}
    <<:
      - *basic
      - *basic-deploy-labels
    deploy:
      <<:
        - *basic-deploy
        - *basic-deploy-labels
    user: "${GID:-1000}:${UID:-1000}"
    environment:
      DOCKER_USER: ${DOCKER_USER:-coder}
    configs:
      - source: entrypoint
        target: /usr/bin/entrypoint.sh
        mode: 0777
      # - source: installer_ext
      #   target: /entrypoint.d/install-ext.sh
      #   mode: 0777
      - source: settings_config
        target: /home/coder/.local/share/code-server/User/settings.json
        mode: 0644
        uid: "${UID:-1000}"
        gid: "${GID:-1000}"
      - source: keybindings_config
        target: /home/coder/.local/share/code-server/User/keybindings.json
        mode: 0644
        uid: "${UID:-1000}"
        gid: "${GID:-1000}"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - coder:/home/coder
    entrypoint: ["/usr/bin/entrypoint.sh", "--bind-addr", "0.0.0.0:8080", "."]

################################################################################
################################################################################
################################################################################
networks:
  proxy:
    external: true

volumes:
  coder: {}

configs:
  entrypoint:
    file: $PWD/config/entrypoint.sh
  installer_ext:
    file: $PWD/config/install-ext.sh
  settings_config:
    file: $PWD/config/settings.json
  keybindings_config:
    file: $PWD/config/keybindings.json
