---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.netmaker-ui.entrypoints=https
    - traefik.http.routers.netmaker-ui.rule=Host(`dashboard.${DOMAIN?domain variable not set}`)

    - traefik.http.routers.netmaker-ui.service=netmaker-ui
    - traefik.http.services.netmaker-ui.loadbalancer.server.scheme=${PROTOCOL_NETMAKER_UI:-http}
    - traefik.http.services.netmaker-ui.loadbalancer.server.port=${PORT_NETMAKER_UI:-80}

    - traefik.http.routers.netmaker-ui.middlewares=nmui-security@docker
    - traefik.http.middlewares.nmui-security.headers.accessControlAllowOriginList=*.${DOMAIN}
    - traefik.http.middlewares.nmui-security.headers.stsSeconds=31536000
    - traefik.http.middlewares.nmui-security.headers.browserXssFilter=true
    - traefik.http.middlewares.nmui-security.headers.customFrameOptionsValue=SAMEORIGIN
    - traefik.http.middlewares.nmui-security.headers.customResponseHeaders.X-Robots-Tag=none
    - traefik.http.middlewares.nmui-security.headers.customResponseHeaders.Server=

x-basic-deploy-labels-api: &basic-deploy-labels-api
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.netmaker-api.entrypoints=https
    - traefik.http.routers.netmaker-api.rule=Host(`api.${DOMAIN?domain variable not set}`)
    - traefik.http.routers.netmaker-api.service=netmaker-api
    - traefik.http.services.netmaker-api.loadbalancer.server.scheme=${PROTOCOL_NETMAKER_API:-http}
    - traefik.http.services.netmaker-api.loadbalancer.server.port=${PORT_NETMAKER_API:-8081}

x-basic-deploy-labels-mq: &basic-deploy-labels-mq
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.tcp.routers.mqtt.entrypoints=https
    - traefik.tcp.routers.mqtt.rule=HostSNI(`broker.${DOMAIN?domain variable not set}`)
    - traefik.tcp.services.mqtt.loadbalancer.server.scheme=${PROTOCOL_MQTT:-http}
    - traefik.tcp.services.mqtt.loadbalancer.server.port=${PORT_MQTT:-8883}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      # cpus: "1.5"
      memory: 1g # 500M
    reservations:
      cpus: "0.001"
      memory: 32M

x-basic: &basic
  env_file: .env
  cap_drop: ["ALL"]
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
    fsize: -1
    as: -1
  networks:
    default: {}
  tmpfs:
    - /tmp
  restart: always # always | on-failure

################################################################################
################################################################################
################################################################################

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  netmaker:
    # https://hub.docker.com/r/gravitl/netmaker
    image: gravitl/netmaker:${VERSION_NETMAKER:-v0.18.0}
    <<: [*basic, *basic-deploy-labels-api]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels-api]
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    ports:
      - "51821-51830:51821-51830/udp"
    environment:
      SERVER_NAME: "broker.${DOMAIN}"
      SERVER_HOST: "${SERVER_PUBLIC_IP}"
      SERVER_API_CONN_STRING: "api.${DOMAIN}:443"
      COREDNS_ADDR: "${SERVER_PUBLIC_IP}"
      DNS_MODE: "on"
      SERVER_HTTP_HOST: "api.${DOMAIN}"
      API_PORT: "8081"
      CLIENT_MODE: "on"
      MASTER_KEY: "${MASTER_KEY}"
      CORS_ALLOWED_ORIGIN: "*"
      DISPLAY_KEYS: "on"
      DATABASE: "sqlite"
      NODE_ID: "netmaker-server-1"
      MQ_HOST: "mq"
      MQ_PORT: "443"
      MQ_SERVER_PORT: "1883"
      HOST_NETWORK: "off"
      VERBOSITY: "1"
      MANAGE_IPTABLES: "on"
      PORT_FORWARD_SERVICES: "dns"
      MQ_ADMIN_PASSWORD: "${MQ_ADMIN_PASSWORD}"
      TELEMETRY: "off"
      AUTH_PROVIDER: "github"
      # CLIENT_ID: "${AUTH_PROVIDER_CLIENT_ID}"
      # CLIENT_SECRET: "${AUTH_PROVIDER_CLIENT_SECRET}"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - dnsconfig:/root/config/dnsconfig
      - sqldata:/root/data
      - mosquitto_data:/etc/netmaker
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
    networks:
      default: {}
      proxy: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  netmaker-ui:
    # https://hub.docker.com/r/gravitl/netmaker-ui
    image: gravitl/netmaker-ui:${VERSION_NETMAKER_UI:-v0.18.0}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    environment:
      BACKEND_URL: "https://api.${DOMAIN}"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      default: {}
      proxy: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  coredns:
    # https://hub.docker.com/r/coredns/coredns
    image: coredns/coredns:${VERSION_COREDNS:-1.10.1}
    <<: *basic
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - dnsconfig:/root/dnsconfig
    command: -conf /root/dnsconfig/Corefile
    restart: always

  ##############################################################################
  ##############################################################################
  ##############################################################################
  mq:
    # https://hub.docker.com/_/eclipse-mosquitto
    image: eclipse-mosquitto:${VERSION_MQTT:-2.0.15-openssl}
    <<: [*basic, *basic-deploy-labels-mq]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels-mq]
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    environment:
      NETMAKER_SERVER_HOST: "https://api.${DOMAIN}"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./config/wait.sh:/mosquitto/config/wait.sh
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    command: ["/mosquitto/config/wait.sh"]
    networks:
      default: {}
      proxy: {}

################################################################################
################################################################################
################################################################################

networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  traefik_certs: {}
  sqldata: {}
  dnsconfig: {}
  mosquitto_data: {}
  mosquitto_logs: {}
