---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.snipeit.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.snipeit.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.snipeit.tls=true
    - traefik.http.routers.snipeit.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.snipeit.service=snipeit
    - traefik.http.services.snipeit.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.snipeit.loadbalancer.server.port=${PORT:-80}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-1}
      memory: ${RESOURCES_LIMITS_MEMORY:-1g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: .env
  cap_add: ["ALL"]
  #   - CHOWN
  #   - DAC_OVERRIDE
  #   - DAC_READ_SEARCH
  #   - SETGID
  #   - SETUID
  #   - FOWNER
  #   - FSETID
  # cap_drop: ["ALL"]
  # security_opt:
  #   - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  snipeit:
    # https://github.com/snipe/snipe-it
    build:
      context: https://github.com/snipe/snipe-it.git#master
      dockerfile: ./Dockerfile
    image: snipe-it
    # image: snipe/snipe-it:${VERSION:-v6.3.4}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    secrets:
      - app_key_password
      - mariadb_user_password
    environment:
      APP_KEY: ${APP_KEY}
      DB_PASSWORD: ${DB_PASSWORD}

      # APP_KEY_FILE: /run/secrets/app_key_password
      # DB_PASSWORD_FILE: /run/secrets/mariadb_user_password

      DB_CONNECTION: mysql
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_DATABASE: ${MARIADB_DATABASE:-snipeit}
      DB_USERNAME: ${MARIADB_USER:-snipeit}
      DB_PREFIX: null
      DB_DUMP_PATH: "/usr/bin"
      DB_CHARSET: utf8
      DB_COLLATION: utf8_unicode_ci

      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_URL: ${APP_URL:-https://${DOMAIN?domain variable not set}}
      APP_TIMEZONE: ${APP_TIMEZONE:-Europe/Berlin}
      APP_LOCALE: ${APP_LOCALE:-en-US}
      MAX_RESULTS: 500

      # MAIL_DRIVER: smtp
      # MAIL_HOST: mailhog
      # MAIL_PORT: 1025
      # MAIL_USERNAME: null
      # MAIL_PASSWORD: null
      # MAIL_ENCRYPTION: null
      # MAIL_FROM_ADDR: you@example.com
      # MAIL_FROM_NAME: 'Snipe-IT'
      # MAIL_REPLYTO_ADDR: you@example.com
      # MAIL_REPLYTO_NAME: 'Snipe-IT'
      # MAIL_AUTO_EMBED_METHOD: 'attachment'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - data:/var/lib/snipeit
      - logs:/var/www/html/storage/logs
    command: >
      sh -c "echo 'Sleep for 10 sec to wait for mariadb to come up...' && sleep 10 && /startup.sh"
    networks:
      default: {}
      proxy: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  mariadb:
    # https://hub.docker.com/_/mariadb
    image: mariadb:${VERSION_MARIADB:-11.3.2}
    <<: *basic
    deploy:
      <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_MARIADB:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_MARIADB:-512M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_MARIADB:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_MARIADB:-32m}
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    secrets:
      - mariadb_user_password
    environment:
      TZ: ${TZ:-Europe/Berlin}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-snipeit}
      MARIADB_USER: ${MARIADB_USER:-snipeit}
      MARIADB_PASSWORD_FILE: /run/secrets/mariadb_user_password
      MARIADB_RANDOM_ROOT_PASSWORD: ${MARIADB_RANDOM_ROOT_PASSWORD:-true}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - mariadb:/var/lib/mysql
    command:
      - --log-bin=mysql-bin
      - --expire-logs-days=7
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh --no-defaults"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data:
    name: snipeit-data
  logs:
    name: snipeit-logs
  mariadb:
    name: snipeit-mariadb

secrets:
  app_key_password:
    file: config/secrets/app_key_password.txt
  mariadb_user_password:
    file: config/secrets/mariadb_user_password.txt
