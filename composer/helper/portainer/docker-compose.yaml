---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.portainer.entrypoints=https
    - traefik.http.routers.portainer.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.portainer.tls=true
    - traefik.http.routers.portainer.service=portainer
    - traefik.http.services.portainer.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.portainer.loadbalancer.server.port=${PORT:-9000}
    - traefik.http.routers.portainer.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      # cpus: "0.3"
      memory: 50M
    reservations:
      cpus: "0.001"
      memory: 10M

x-basic: &basic
  env_file: .env
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
    fsize: -1
    as: -1
  networks:
    default: {}
    proxy: {}
  tmpfs:
    - /tmp
  restart: always # always | on-failure

################################################################################
################################################################################
################################################################################

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  portainer:
    # https://hub.docker.com/r/portainer/portainer-ce
    image: portainer/portainer-ce:${VERSION_PORTAINER:-2.16.2-alpine}
    <<: *basic
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    # ports:
    #   - target: ${PORT:-9000}
    #     published: ${PORT_PUBLISH:-9000}
    #     protocol: tcp
    #     mode: host
    #   - target: ${PORT_HTTPS:-9443}
    #     published: ${PORT_HTTPS_PUBLISH:-9443}
    #     protocol: tcp
    #     mode: host
    #   - target: ${PORT_OTHER:-8000}
    #     published: ${PORT_OTHER_PUBLISH:-8000}
    #     protocol: tcp
    #     mode: host
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - data:/data
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "--no-check-certificate",
          "${PROTOCOL:-http}://127.0.0.1:${PORT:-9000}",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  ##############################################################################
  ##############################################################################
  ##############################################################################
  agent:
    # https://hub.docker.com/r/portainer/agent
    image: portainer/agent:${VERSION_AGENT:-2.16.2-alpine}
    <<: *basic
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      restart_policy:
        condition: on-failure
      resources:
        limits:
          # cpus: "0.3"
          memory: 50M
        reservations:
          cpus: "0.001"
          memory: 10M
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      default: {}
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "wget",
    #       "--no-verbose",
    #       "--tries=1",
    #       "--spider",
    #       "--no-check-certificate",
    #       "https://127.0.0.1:9001/ping"
    #     ]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

    ################################################################################
    ################################################################################
    ################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data: {}
