---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.openvas.entrypoints=https
    - traefik.http.routers.openvas.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.openvas.tls=true
    - traefik.http.routers.openvas.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.openvas.service=openvas
    - traefik.http.services.openvas.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.openvas.loadbalancer.server.port=${PORT:-80}
    - traefik.http.services.openvas.loadbalancer.sticky=true
    - traefik.http.services.openvas.loadbalancer.sticky.cookie.name=stickycookie
    - traefik.http.services.openvas.loadbalancer.sticky.cookie.secure=true
    - traefik.http.services.openvas.loadbalancer.sticky.cookie.httpOnly=true

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-2}
      memory: ${RESOURCES_LIMITS_MEMORY:-3G}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.01}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-100m}

x-basic-deploy-conf: &basic-deploy-conf
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS_CONF:-0.2}
      memory: ${RESOURCES_LIMITS_MEMORY_CONF:-250m}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS_CONF:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY_CONF:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_add: ["ALL"]
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  tmpfs:
    - /tmp
  sysctls:
    - net.ipv4.ip_forward=1
    - net.ipv4.conf.all.src_valid_mark=1
    - net.ipv4.conf.all.rp_filter=0
    - net.ipv4.conf.default.rp_filter=0
    - net.ipv4.conf.eth0.rp_filter=0
    - net.ipv4.conf.lo.rp_filter=0
    - net.ipv6.conf.all.forwarding=1
    - net.ipv6.conf.all.disable_ipv6=0

# x-basic-cap:
#   &basic-cap
#   cap_add:
#     - SETFCAP
#     - SETGID
#     - SETUID

# x-basic-cap-net:
#   &basic-cap-net
#   cap_add:
#     - NET_ADMIN # for capturing packages in promiscuous mode
#     - NET_RAW # for raw sockets e.g. used for the boreas alive detection
#     - SETFCAP
#     - SETGID
#     - SETUID

# x-basic-cap-files:
#   &basic-cap-files
#   cap_add:
#     - CHOWN
#     - FOWNER
#     - SETGID
#     - SETUID
#     - DAC_OVERRIDE

################################################################################
################################################################################
################################################################################

services:
  gsa:
    image: greenbone/gsa:${VERSION_GSA:-stable}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    restart: on-failure
    # ports:
    #   - 9392:80
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - gvmd_socket_vol:/run/gvmd
    networks:
      default: {}
      proxy: {}

  gvmd:
    image: greenbone/gvmd:${VERSION_GVMD:-stable}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - gvmd_data_vol:/var/lib/gvm
      - scap_data_vol:/var/lib/gvm/scap-data/
      - cert_data_vol:/var/lib/gvm/cert-data
      - data_objects_vol:/var/lib/gvm/data-objects/gvmd
      - vt_data_vol:/var/lib/openvas/plugins
      - psql_data_vol:/var/lib/postgresql
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
      - psql_socket_vol:/var/run/postgresql

  notus-scanner:
    image: greenbone/notus-scanner:${VERSION_NOTUS_SCANNER:-stable}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - notus_data_vol:/var/lib/notus
      - gpg_data_vol:/etc/openvas/gnupg
    environment:
      NOTUS_SCANNER_MQTT_BROKER_ADDRESS: mqtt-broker
      NOTUS_SCANNER_PRODUCTS_DIRECTORY: /var/lib/notus/products

  ospd-openvas:
    image: greenbone/ospd-openvas:${VERSION_OSPD_OPENVAS:-stable}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    # cap_add:
    #   - NET_ADMIN # for capturing packages in promiscuous mode
    #   - NET_RAW # for raw sockets e.g. used for the boreas alive detection
    # security_opt:
    #   - seccomp=unconfined
    #   - apparmor=unconfined
    # configs:
    #   - source: openvas_config
    #     target: /etc/openvas/openvas.conf
    #     mode: 0644
    #     uid: "19654"
    #     gid: "19654"
    command:
      [
        "ospd-openvas",
        "-f",
        "--config",
        "/etc/gvm/ospd-openvas.conf",
        "--mqtt-broker-address",
        "mqtt-broker",
        "--notus-feed-dir",
        "/var/lib/notus/advisories",
        "-m",
        "666",
      ]
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - ospd_openvas_socket_vol:/run/ospd
      - redis_socket_vol:/run/redis/

  mqtt-broker:
    image: greenbone/mqtt-broker:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    # volumes:
    #   - /etc/timezone:/etc/timezone:ro
    #   - /etc/localtime:/etc/localtime:ro
    networks:
      default:
        aliases:
          - mqtt-broker
          - broker

  pg-gvm:
    image: greenbone/pg-gvm:${VERSION_PG_GVM:-stable}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - psql_data_vol:/var/lib/postgresql
      - psql_socket_vol:/var/run/postgresql

  redis-server:
    image: greenbone/redis-server:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy
    restart: on-failure
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - redis_socket_vol:/run/redis/

  ##############################################################################
  ##############################################################################
  ##############################################################################

  vulnerability-tests:
    image: greenbone/vulnerability-tests:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy
    environment:
      STORAGE_PATH: /var/lib/openvas/22.04/vt-data/nasl
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - vt_data_vol:/mnt

  ##############################################################################
  ##############################################################################
  ##############################################################################

  notus-data:
    image: greenbone/notus-data:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - notus_data_vol:/mnt

  scap-data:
    image: greenbone/scap-data:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - scap_data_vol:/mnt

  cert-bund-data:
    image: greenbone/cert-bund-data:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - cert_data_vol:/mnt

  dfn-cert-data:
    image: greenbone/dfn-cert-data:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - cert_data_vol:/mnt

  data-objects:
    image: greenbone/data-objects:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - data_objects_vol:/mnt

  report-formats:
    image: greenbone/report-formats:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - data_objects_vol:/mnt

  gpg-data:
    image: greenbone/gpg-data:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - gpg_data_vol:/mnt

  gvm-tools:
    image: greenbone/gvm-tools:${VERSION_LATEST:-latest}
    <<: *basic
    deploy:
      <<: *basic-deploy-conf
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  gpg_data_vol:
  scap_data_vol:
  cert_data_vol:
  data_objects_vol:
  gvmd_data_vol:
  psql_data_vol:
  vt_data_vol:
  notus_data_vol:
  psql_socket_vol:
  gvmd_socket_vol:
  ospd_openvas_socket_vol:
  redis_socket_vol:
# configs:
#   openvas_config:
#     file: $PWD/config/openvas.conf
