---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.<router_name>${SERVICE_NAME_POST:-}.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.<router_name>${SERVICE_NAME_POST:-}.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.<router_name>${SERVICE_NAME_POST:-}.tls=true
    - traefik.http.routers.<router_name>${SERVICE_NAME_POST:-}.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.<router_name>${SERVICE_NAME_POST:-}.service=<router_name>${SERVICE_NAME_POST:-}
    - traefik.http.services.<router_name>${SERVICE_NAME_POST:-}.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.<router_name>${SERVICE_NAME_POST:-}.loadbalancer.server.port=${PORT:-8000}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-8}
      memory: ${RESOURCES_LIMITS_MEMORY:-8g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: .env
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  paperless:
    # https://github.com/paperless-ngx/paperless-ngx/pkgs/container/paperless-ngx
    image: ghcr.io/paperless-ngx/paperless-ngx:${VERSION_PAPERLESS:-2.8}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    cap_add:
      - DAC_OVERRIDE
      - CHOWN
      - SETGID
      - SETUID
    secrets:
      - mariadb_user_password
      - paperless_admin_password
      - paperless_secret_key
    environment:
      PAPERLESS_URL: https://${DOMAIN?domain variable not set}
      PAPERLESS_REDIS: redis://valkey:6379

      PAPERLESS_DBENGINE: mariadb
      PAPERLESS_DBHOST: mariadb
      PAPERLESS_DBPORT: 3306
      PAPERLESS_DBNAME: ${MARIADB_DATABASE:-paperless}
      PAPERLESS_DBUSER: ${MARIADB_USER:-paperless}
      PAPERLESS_DBPASS_FILE: /run/secrets/mariadb_user_password

      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER:-groot}
      PAPERLESS_ADMIN_PASSWORD_FILE: /run/secrets/paperless_admin_password
      PAPERLESS_SECRET_KEY: /run/secrets/paperless_secret_key

      # https://packages.debian.org/search?keywords=tesseract-ocr-&searchon=names&suite=buster
      PAPERLESS_OCR_LANGUAGES: eng+deu

      # PAPERLESS_TIKA_ENABLED: 1
      # PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      # PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - export:/usr/src/paperless/export
      - consume:/usr/src/paperless/consume
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      default: {}
      proxy: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  # gotenberg:
  #   # https://hub.docker.com/r/gotenberg/gotenberg
  #   image: gotenberg/gotenberg:${VERSION_GOTENBERG:-8.5.1}
  #   <<: *basic
  #   deploy:
  #     <<: *basic-deploy
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   command:
  #     - "gotenberg"
  #     - "--chromium-disable-javascript=true"
  #     - "--chromium-allow-list=file:///tmp/.*"

  # tika:
  #   # https://hub.docker.com/r/apache/tika
  #   image: apache/tika:${VERSION_TIKA:-2.9.2.1}
  #   <<: *basic
  #   deploy:
  #     <<: *basic-deploy
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro

  ##############################################################################
  ##############################################################################
  ##############################################################################
  mariadb:
    # https://hub.docker.com/_/mariadb
    image: mariadb:${VERSION_MARIADB:-11.3.2}
    <<: *basic
    deploy:
      <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_MARIADB:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_MARIADB:-512M}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_MARIADB:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_MARIADB:-32m}
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    secrets:
      - mariadb_user_password
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE:-paperless}
      MARIADB_USER: ${MARIADB_USER:-paperless}
      MARIADB_PASSWORD_FILE: /run/secrets/mariadb_user_password
      MARIADB_RANDOM_ROOT_PASSWORD: ${MARIADB_RANDOM_ROOT_PASSWORD:-true}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - mariadb:/var/lib/mysql
    command:
      - --log-bin=mysql-bin
      - --expire-logs-days=90
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh --no-defaults"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

  ##############################################################################
  ##############################################################################
  ##############################################################################
  valkey:
    # https://hub.docker.com/r/valkey/valkey
    image: valkey/valkey:${VERSION_VALKEY:-7.2.5-alpine}
    <<: *basic
    deploy:
      <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_VALKEY:-2}
          memory: ${RESOURCES_LIMITS_MEMORY_VALKEY:-8G}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_VALKEY:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_VALKEY:-32m}
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - valkey:/data
    command: --save 300 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data: {}
  media: {}
  export: {}
  consume: {}
  mariadb: {}
  valkey: {}

secrets:
  paperless_admin_password:
    file: config/secrets/paperless_admin_password.txt
  paperless_secret_key:
    file: config/secrets/paperless_secret_key.txt
  mariadb_user_password:
    file: config/secrets/mariadb_user_password.txt
