---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.beszel.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.beszel.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.beszel.tls=true
    - traefik.http.routers.beszel.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.beszel.service=beszel
    - traefik.http.services.beszel.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.beszel.loadbalancer.server.port=${PORT:-8090}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: stop-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-1}
      memory: ${RESOURCES_LIMITS_MEMORY:-1g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  beszel:
    # https://github.com/henrygd/beszel/pkgs/container/beszel%2Fbeszel
    image: ghcr.io/henrygd/beszel/beszel:${VERSION:-0.13.2}
    <<:
      - *basic
      - *basic-deploy-labels
    deploy:
      <<:
        - *basic-deploy
        - *basic-deploy-labels
    environment:
      APP_URL: https://${DOMAIN?domain variable not set}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - data:/beszel_data
      - socket:/beszel_socket
    networks:
      default: {}
      proxy: {}
    healthcheck:
      test:
        [
          "CMD",
          "/beszel",
          "health",
          "--url",
          "${PROTOCOL:-http}://127.0.0.1:${PORT:-8090}",
        ]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10

  ##############################################################################
  ##############################################################################
  ##############################################################################
  beszel-agent:
    # https://github.com/henrygd/beszel/pkgs/container/beszel%2Fbeszel-agent
    image: ghcr.io/henrygd/beszel/beszel-agent:${VERSION:-0.13.2}
    <<: *basic
    deploy:
      <<: *basic-deploy
    # cap_add:
    #   - NET_RAW
    environment:
      LISTEN: /beszel_socket/beszel.sock
      KEY: ${KEY?key for agent is not set}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - socket:/beszel_socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "/agent", "health"]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-overlay}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data: {}
  socket: {}
