---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    # - traefik.docker.lbswarm=${LB_SWARM:-true}
    # - traefik.docker.network=proxy
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.traefik.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.traefik.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.traefik.tls=true
    - traefik.http.routers.traefik.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.traefik.service=api@internal
    - traefik.http.services.traefik.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.traefik.loadbalancer.server.port=${PORT:-8080}
    - traefik.http.routers.traefik.middlewares=admin-auth
    - traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS?dashboard credential variable not set}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: any # any | on-failure | none
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-0.5}
      memory: ${RESOURCES_LIMITS_MEMORY:-100M}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    proxy: {}
  restart: always

################################################################################
################################################################################
################################################################################

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  traefik:
    # https://hub.docker.com/_/traefik
    image: traefik:${VERSION:-v3.3.1}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    ports:
      - target: 80 # http
        published: 80
        protocol: tcp
        mode: host
      - target: 443 # https
        published: 443
        protocol: tcp
        mode: host
    # secrets:
    #   - cf_api_token_secret
    # environment:
    #   CF_DNS_API_TOKEN_FILE: /run/secrets/cf_api_token_secret
    configs:
      - source: traefik_config
        target: /etc/traefik/traefik.yml
        mode: 440
      - source: traefik_config_traefik_dynamic
        target: /etc/traefik/config/traefik_dynamic.yml
        mode: 440
      - source: traefik_config_http
        target: /etc/traefik/config/config.yml
        mode: 440
      - source: traefik_ca_config
        target: /etc/traefik/certs/ca.pem
        mode: 440
      - source: traefik_crt_config
        target: /etc/traefik/certs/cert.pem
        mode: 440
      - source: traefik_key_config
        target: /etc/traefik/certs/cert-key.pem
        mode: 440
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/traefik/certs
      - resolver_certs:/resolver-certs
      - traefik_logs:/var/log/traefik
    healthcheck:
      test: "traefik healthcheck --ping"
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s

################################################################################
################################################################################
################################################################################
networks:
  proxy:
    name: proxy
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"

volumes:
  certs: {}
  resolver_certs: {}
  traefik_logs:
    name: traefik_logs

configs:
  traefik_config:
    file: $PWD/config/traefik.yml
  traefik_config_traefik_dynamic:
    file: $PWD/config/traefik_dynamic.yml
  traefik_config_http:
    file: $PWD/config/config.yml
  traefik_ca_config:
    file: $PWD/config/ssl/ca.pem
  traefik_crt_config:
    file: $PWD/config/ssl/cert.pem
  traefik_key_config:
    file: $PWD/config/ssl/cert-key.pem
#
# secrets:
#   cf_api_token_secret:
#     file: config/secrets/cf_api_token_secret.txt
