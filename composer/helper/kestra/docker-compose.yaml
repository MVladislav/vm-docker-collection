---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.kestra.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.kestra.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.kestra.tls=true
    - traefik.http.routers.kestra.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.kestra.service=kestra
    - traefik.http.services.kestra.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.kestra.loadbalancer.server.port=${PORT:-8080}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: stop-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-2}
      memory: ${RESOURCES_LIMITS_MEMORY:-4g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  # cap_add:
  #   # https://dockerlabs.collabnix.com/advanced/security/capabilities/
  #   - CHOWN # (chown, chmod)
  #   - DAC_OVERRIDE
  #   - DAC_READ_SEARCH
  #   - SETGID # (setgid, setgroups)
  #   - SETUID # (setuid)
  #   - FOWNER # (chmod, chown, or chgrp)
  #   - FSETID
  # cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges=true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  tmpfs:
    - /tmp
    - /run
    - /run/lock
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  kestra:
    # https://hub.docker.com/r/kestra/kestra
    image: kestra/kestra:${VERSION_KESTRA:-v0.23.5}
    <<:
      - *basic
      - *basic-deploy-labels
    deploy:
      <<:
        - *basic-deploy
        - *basic-deploy-labels
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgresql:5432/${POSTGRES_DB:-kestra}
            driverClassName: org.postgresql.Driver
            username: ${POSTGRES_USER:-kestra}
            password: ""
        kestra:
          server:
            basicAuth:
              enabled: ${KESTRA_AUTH_ENABLED:-false}
              username: ${KESTRA_USERNAME:-groot@home.local}
              password: ${KESTRA_PASSWORD:-kestra}
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: https://${DOMAIN?domain variable not set}/
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/app/storage
    extends:
      file: config/secrets.yaml
      service: kestra-secrets
    command: server standalone --worker-thread=128
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8081/health"]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      default: {}
      proxy: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  postgresql:
    # https://hub.docker.com/_/postgres
    image: postgres:${VERSION_POSTGRESQL:-17.5-alpine}
    <<: *basic
    deploy:
      <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_POSTGRESQL:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_POSTGRESQL:-512m}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_POSTGRESQL:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_POSTGRESQL:-32m}
    cap_add:
      - SETUID
      - SETGID
      - FOWNER
      - DAC_OVERRIDE
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kestra}
      POSTGRES_USER: ${POSTGRES_USER:-kestra}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 2s
      interval: 5s
      timeout: 3s
      retries: 5

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-overlay}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data: {}
  postgresql: {}
