version: "3.8"

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  portspoof:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-2022}
        VERSION: ${VERSION:-latest}
    image: portspoof:${VERSION:-latest}
    stdin_open: true # docker run -i
    tty: true # docker run -t
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
      fsize: -1
      as: -1
    deploy:
      mode: replicated
      # mode: global
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==${NODE_ROLE:-manager}"
          - node.platform.os == linux
      restart_policy:
        condition: on-failure
    ports:
      - target: 4444
        published: ${PORT:-4444}
        protocol: tcp
        mode: host
    # environment:
    #   VAR: ...
    # configs:
    #   - source: xx_config
    #     target: ...
    #     mode: 0440
    #     uid: "1000"
    #     gid: "1000"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # - data:/root
      # - type: bind
      #   source: ./logstash/config/logstash.yml
      #   target: /usr/share/logstash/config/logstash.yml
      #   read_only: true
    # command: >
    #   portspoof -s /usr/local/etc/portspoof_signatures
    networks:
      default: {}
    # network_mode: host
    restart: always

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
#
# volumes:
#   data: {}
#
# configs:
#   xx_config:
#     file: $PWD/config/...
