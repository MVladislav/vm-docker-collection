---
x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: stop-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-4}
      memory: ${RESOURCES_LIMITS_MEMORY:-2g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  # cap_add: ["ALL"]
  # cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges=true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  pangolin:
    # https://hub.docker.com/r/fosrl/pangolin
    image: fosrl/pangolin:${VERSION_PANGOLIN:-1.6.2}
    <<: *basic
    deploy:
      <<: *basic-deploy
    configs:
      - source: pangolin_config
        target: /app/config/config.yml
        mode: 0440
        uid: "0"
        gid: "0"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - pangolin_data:/app/config
    environment:
      # APP
      APP_DASHBOARDURL: https://${DASHBOARDURL?domain variable not set}
      APP_BASEDOMAIN: ${BASEDOMAIN?domain variable not set}
      # DOMAINS
      DOMAINS_DEFAULT_BASEDOMAIN: ${BASEDOMAIN?base domain variable not set}
      DOMAINS_DEFAULT_CERTRESOLVER: letsencrypt
      DOMAINS_DEFAULT_PREFERWILDCARDCERT: "true"
      # GERBIL
      GERBIL_BASEENDPOINT: ${BASEDOMAIN?base domain variable not set}
      # TRAEFIK
      GENERATE_TRAEFIK_CONFIG: "false"
      # FLAGS
      FLAGS_EMAIL_VERIFICATION_REQUIRED: "false"
      FLAGS_DISABLE_SIGNUP_WITHOUT_INVITE: "true"
      FLAGS_DISABLE_USER_CREATE_ORG: "true"
      FLAGS_ALLOW_RAW_RESOURCES: "true"
      FLAGS_ALLOW_BASE_DOMAIN_RESOURCES: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      pangolin: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  gerbil:
    # https://hub.docker.com/r/fosrl/gerbil
    image: fosrl/gerbil:${VERSION_GERBIL:-1.0.0}
    depends_on:
      pangolin:
        condition: service_healthy
    <<: *basic
    deploy:
      <<: *basic-deploy
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - 51820:51820/udp
      - 443:443 # Port for traefik because of the network_mode
      - 80:80 # Port for traefik because of the network_mode
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - pangolin_data:/var/config
    command:
      - --reachableAt=http://gerbil:3003
      - --generateAndSaveKeyTo=/var/config/key
      - --remoteConfig=http://pangolin:3001/api/v1/gerbil/get-config
      - --reportBandwidthTo=http://pangolin:3001/api/v1/gerbil/receive-bandwidth
    networks:
      pangolin: {}

  ##############################################################################
  ##############################################################################
  ##############################################################################
  traefik:
    # https://hub.docker.com/_/traefik
    image: traefik:${VERSION_TRAEFIK:-v3.4.3}
    depends_on:
      pangolin:
        condition: service_healthy
      crowdsec:
        condition: service_healthy
    <<: *basic
    deploy:
      <<: *basic-deploy
    configs:
      - source: dynamic_config
        target: /etc/traefik/dynamic_config.yml
        mode: 0440
        uid: "0"
        gid: "0"
      - source: ban_page
        target: /etc/traefik/ban.html
        mode: 0440
        uid: "0"
        gid: "0"
    secrets:
      - traefik_basicauth_secret
      - dnschallenge_api_key_secret
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      - traefik_logs:/var/log/traefik
    environment:
      IONOS_API_KEY_FILE: /run/secrets/dnschallenge_api_key_secret
      # https://doc.traefik.io/traefik/reference/static-configuration/env/
      # Global configuration
      TRAEFIK_GLOBAL_CHECKNEWVERSION: ${TRAEFIK_GLOBAL_CHECKNEWVERSION:-true}
      TRAEFIK_GLOBAL_SENDANONYMOUSUSAGE: "false"
      # EntryPoints configuration
      TRAEFIK_ENTRYPOINTS_WEB: "true"
      TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: ":80"
      TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO: websecure
      TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME: https
      TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_PERMANENT: "true"
      TRAEFIK_ENTRYPOINTS_WEBSECURE: "true"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS: ":443"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_TRANSPORT_RESPONDINGTIMEOUTS_READTIMEOUT: 30m
      TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_CERTRESOLVER: letsencrypt
      TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_MIDDLEWARES: crowdsec@file,public-whitelist@file,default-headers@file
      # Traefik logs configuration
      TRAEFIK_LOG: ${TRAEFIK_LOG:-true}
      # TRAEFIK_LOG_FILEPATH: /var/log/traefik/traefik.log
      TRAEFIK_LOG_LEVEL: INFO # TRACE, DEBUG, PANIC, FATAL, ERROR, WARN, INFO
      TRAEFIK_LOG_FORMAT: common
      # Access logs configuration
      TRAEFIK_ACCESSLOG: ${TRAEFIK_ACCESSLOG:-true}
      TRAEFIK_ACCESSLOG_FILEPATH: /var/log/traefik/access.log
      TRAEFIK_ACCESSLOG_FORMAT: common
      TRAEFIK_ACCESSLOG_FIELDS_DEFAULTMODE: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_ClientUsername: drop
      TRAEFIK_ACCESSLOG_FIELDS_HEADERS_DEFAULTMODE: keep
      TRAEFIK_ACCESSLOG_FIELDS_HEADERS_NAMES_User-Agent: keep
      TRAEFIK_ACCESSLOG_FIELDS_HEADERS_NAMES_Authorization: drop
      TRAEFIK_ACCESSLOG_FIELDS_HEADERS_NAMES_Content-Type: keep
      # API and dashboard configuration
      TRAEFIK_API: ${TRAEFIK_API:-true}
      TRAEFIK_API_DASHBOARD: ${TRAEFIK_API_DASHBOARD:-true}
      TRAEFIK_API_INSECURE: "false"
      TRAEFIK_API_DEBUG: ${TRAEFIK_API_DEBUG:-false}
      # Ping configuration
      TRAEFIK_PING: "true"
      # Docker configuration backend
      TRAEFIK_PROVIDERS_HTTP: "true"
      TRAEFIK_PROVIDERS_HTTP_ENDPOINT: http://pangolin:3001/api/v1/traefik-config
      TRAEFIK_PROVIDERS_HTTP_POLLINTERVAL: 5s
      TRAEFIK_PROVIDERS_DOCKER: ${TRAEFIK_PROVIDERS_DOCKER:-false}
      TRAEFIK_PROVIDERS_DOCKER_ENDPOINT: unix:///var/run/docker.sock
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
      TRAEFIK_PROVIDERS_DOCKER_WATCH: "true"
      TRAEFIK_PROVIDERS_FILE_FILENAME: /etc/traefik/dynamic_config.yml
      TRAEFIK_PROVIDERS_FILE_WATCH: "true"
      # TLS
      TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY: "true"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT: "true"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL: ${ACME_EMAIL?ACME Mail not set}
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE: /letsencrypt/acme.json
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_KEYTYPE: EC256
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER: ${ACME_CASERVER:-https://acme-staging-v02.api.letsencrypt.org/directory} # https://acme-v02.api.letsencrypt.org/directory
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE: "true"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_PROVIDER: ${ACME_DNSCHALLENGE_PROVIDER:-ionos}
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_RESOLVERS: ${ACME_DNSCHALLENGE_RESOLVERS:-9.9.9.9,194.242.2.2,1.1.1.1}
      # PLUGINS
      TRAEFIK_EXPERIMENTAL_PLUGINS_BADGER_MODULENAME: github.com/fosrl/badger
      TRAEFIK_EXPERIMENTAL_PLUGINS_BADGER_VERSION: ${VERSION_BADGER:-v1.2.0} # https://github.com/fosrl/badger
      TRAEFIK_EXPERIMENTAL_PLUGINS_CROWDSEC_MODULENAME: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
      TRAEFIK_EXPERIMENTAL_PLUGINS_CROWDSEC_VERSION: ${VERSION_CROWDSEC_PLUGIN:-v1.4.4} # ...
    healthcheck:
      test: "traefik healthcheck --ping"
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s
    network_mode: service:gerbil # Ports appear on the gerbil service

  ##############################################################################
  ##############################################################################
  ##############################################################################
  crowdsec:
    # https://hub.docker.com/r/crowdsecurity/crowdsec
    image: crowdsecurity/crowdsec:${VERSION_CROWDSEC:-v1.6.10}
    <<: *basic
    deploy:
      <<: *basic-deploy
    configs:
      - source: appsec_config
        target: /config/crowdsec/acquis.d/appsec.yaml
        mode: 0440
        uid: "0"
        gid: "0"
      - source: traefik_config
        target: /config/crowdsec/acquis.d/traefik.yaml
        mode: 0440
        uid: "0"
        gid: "0"
      - source: syslog_config
        target: /config/crowdsec/acquis.d/syslog.yaml
        mode: 0440
        uid: "0"
        gid: "0"
      - source: journalctl_config
        target: /config/crowdsec/acquis.d/journalctl.yaml
        mode: 0440
        uid: "0"
        gid: "0"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - crowdsec_data:/etc/crowdsec
      - crowdsec_db:/var/lib/crowdsec/data
      # Syslog
      - /var/log/auth.log:/var/log/auth.log:ro
      - /var/log/syslog:/var/log/syslog:ro
      # Journalctl
      - traefik_logs:/var/log/traefik:ro
      - /var/log/journal:/var/log/host:ro
    environment:
      CUSTOM_HOSTNAME: crowdsec
      BOUNCER_KEY_traefik: PANGOLINLAPI1234
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules crowdsecurity/linux crowdsecurity/iptables
      ENROLL_INSTANCE_NAME: pangolin-crowdsec
      ENROLL_TAGS: docker
      # GID: "1000"
      PARSERS: crowdsecurity/whitelists
    healthcheck:
      test:
        - CMD
        - cscli
        - capi
        - status
      start_period: 5s
      interval: 10s
      retries: 5
      timeout: 3s
    networks:
      pangolin: {}

################################################################################
################################################################################
################################################################################
networks:
  pangolin:
    name: pangolin
    driver: ${NETWORK_MODE:-overlay}
    attachable: true
    driver_opts:
      encrypted: "true"

volumes:
  pangolin_data: {}
  letsencrypt: {}
  traefik_logs: {}
  crowdsec_data: {}
  crowdsec_db: {}

configs:
  pangolin_config:
    file: $PWD/config/pangolin/config.yml
  dynamic_config:
    file: $PWD/config/traefik/dynamic_config.yml
  ban_page:
    file: $PWD/config/traefik/ban.html
  appsec_config:
    file: $PWD/config/crowdsec/appsec.yaml
  traefik_config:
    file: $PWD/config/crowdsec/traefik.yaml
  syslog_config:
    file: $PWD/config/crowdsec/syslog.yaml
  journalctl_config:
    file: $PWD/config/crowdsec/journalctl.yaml

secrets:
  traefik_basicauth_secret:
    file: config/secrets/traefik_basicauth_secret.txt
  dnschallenge_api_key_secret:
    file: config/secrets/dnschallenge_api_key_secret.txt
