---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.invoiceshelf.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.invoiceshelf.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.invoiceshelf.tls=true
    - traefik.http.routers.invoiceshelf.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.invoiceshelf.service=invoiceshelf
    - traefik.http.services.invoiceshelf.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.invoiceshelf.loadbalancer.server.port=${PORT:-8080}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: stop-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-1}
      memory: ${RESOURCES_LIMITS_MEMORY:-1g}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    default: {}
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################
services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  invoiceshelf:
    # https://hub.docker.com/r/invoiceshelf/invoiceshelf
    image: invoiceshelf/invoiceshelf:${VERSION_INVOICE_SHELF:-2.2.0-alpha2}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    cap_add:
      - ALL
    secrets:
      - postgres_password_file
    environment:
      APP_URL: https://${DOMAIN?domain variable not set}
      SESSION_DOMAIN: ${DOMAIN?domain variable not set}
      SANCTUM_STATEFUL_DOMAINS: ${DOMAIN?domain variable not set}
      TRUSTED_PROXIES: "*"

      PHP_TZ: ${PHP_TZ:-Europe/Berlin} # UTC
      APP_TIMEZONE: ${APP_TIMEZONE:-Europe/Berlin} # UTC
      TIMEZONE: ${TIMEZONE:-Europe/Berlin} # UTC
      APP_NAME: ${APP_NAME:-InvoiceShelf}
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}

      DB_CONNECTION: pgsql
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB:-invoiceshelf}
      DB_USERNAME: ${POSTGRES_USER:-invoiceshelf}
      DB_PASSWORD_FILE: /run/secrets/postgres_password_file
      CACHE_STORE: file
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      SESSION_ENCRYPT: false
      SESSION_PATH: /
    volumes:
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
      - data:/var/www/html/storage
      - modules:/var/www/html/Modules/
    networks:
      default: {}
      proxy: {}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -kIf ${PROTOCOL:-http}://127.0.0.1:${PORT:-8080} > /dev/null 2>&1 || exit 1",
        ]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10

  ##############################################################################
  ##############################################################################
  ##############################################################################
  postgresql:
    # https://hub.docker.com/_/postgres
    image: postgres:${VERSION_POSTGRESQL:-17.6-alpine}
    <<: *basic
    deploy:
      <<: *basic-deploy
      resources:
        limits:
          cpus: ${RESOURCES_LIMITS_CPUS_POSTGRESQL:-1}
          memory: ${RESOURCES_LIMITS_MEMORY_POSTGRESQL:-512m}
        reservations:
          cpus: ${RESOURCES_RESERVATIONS_CPUS_POSTGRESQL:-0.001}
          memory: ${RESOURCES_RESERVATIONS_MEMORY_POSTGRESQL:-32m}
    cap_add:
      - CHOWN
      - FOWNER
      - DAC_READ_SEARCH
      - SETUID
      - SETGID
    secrets:
      - postgres_password_file
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-invoiceshelf}
      POSTGRES_USER: ${POSTGRES_USER:-invoiceshelf}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password_file
      PGDATA: /var/lib/postgresql/data
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 2s
      interval: 5s
      timeout: 3s
      retries: 5

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-overlay}
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy:
    external: true

volumes:
  data: {}
  modules: {}
  postgresql: {}

secrets:
  postgres_password_file:
    file: config/secrets/postgres_password_file.txt
