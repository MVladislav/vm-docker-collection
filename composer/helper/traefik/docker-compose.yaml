version: "3.8"

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  traefik:
    image: traefik:${VERSION:-latest}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
      fsize: -1
      as: -1
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==${NODE_ROLE:-manager}"
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=${LB_SWARM:-true}
        - traefik.docker.network=proxy
        - traefik.http.routers.traefik.entrypoints=https
        - traefik.http.routers.traefik.rule=Host(`${DOMAIN?domain variable not set}`)
        - traefik.http.routers.traefik.tls=true
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.services.traefik.loadbalancer.server.scheme=${PROTOCOL:-http}
        - traefik.http.services.traefik.loadbalancer.server.port=${PORT:-8080}
        - traefik.http.routers.traefik.middlewares=${MIDDLEWARE_SECURED:-admin-secured@file}
        # admin-auth middleware with HTTP Basic auth
        # Using the environment variables USERNAME and HASHED_PASSWORD
        - traefik.http.routers.traefik.middlewares=admin-auth
        - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?username variable not set}:${HASHED_PASSWORD?password hash variable not set}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      # -------------------------------------
      - target: 9200 # elasticsearch
        published: 9200
        protocol: tcp
        mode: host
      - target: 8220 # elastic-agent
        published: 8220
        protocol: tcp
        mode: host
      - target: 5140 # elk opnsense
        published: 5140
        protocol: tcp
        mode: host
      - target: 5044 # elk beats
        published: 5044
        protocol: tcp
        mode: host
      # -------------------------------------
      - target: 1012 # fritz call monit
        published: 1012
        protocol: tcp
        mode: host
      # -------------------------------------
    configs:
      - source: traefik_config
        target: /etc/traefik/traefik.yml
        mode: 440
      - source: traefik_config_http
        target: /etc/traefik/config.yml
        mode: 440
      - source: traefik_ca_config
        target: /etc/traefik/certs/ca.pem
        mode: 440
      - source: traefik_crt_config
        target: /etc/traefik/certs/cert.pem
        mode: 440
      - source: traefik_key_config
        target: /etc/traefik/certs/cert-key.pem
        mode: 440
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_logs:/var/log/traefik
    networks:
      proxy: {}
    restart: always

################################################################################
################################################################################
################################################################################
networks:
  proxy:
    name: proxy
    driver: ${NETWORK_MODE:-bridge}
    attachable: true

volumes:
  config: {}
  traefik_logs:
    name: traefik_logs

configs:
  traefik_config:
    file: $PWD/config/traefik.yml
  traefik_config_http:
    file: $PWD/config/config.yml
  traefik_ca_config:
    file: $PWD/config/ssl/ca.pem
  traefik_crt_config:
    file: $PWD/config/ssl/cert.pem
  traefik_key_config:
    file: $PWD/config/ssl/cert-key.pem
