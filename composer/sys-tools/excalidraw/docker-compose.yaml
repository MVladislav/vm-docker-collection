---
x-basic-deploy-labels: &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.excalidraw.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.excalidraw.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.excalidraw.tls=true
    - traefik.http.routers.excalidraw.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.excalidraw.service=excalidraw
    - traefik.http.services.excalidraw.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.excalidraw.loadbalancer.server.port=${PORT:-80}

# x-storage-deploy-labels: &storage-deploy-labels
#   labels:
#     - traefik.enable=true
#     - traefik.swarm.lbswarm=${LB_SWARM:-true}
#     - traefik.swarm.network=proxy
#     - traefik.http.routers.excalidraw-storage.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
#     - traefik.http.routers.excalidraw-storage.rule=Host(`${DOMAIN_STORAGE?domain variable not set}`)
#     - traefik.http.routers.excalidraw-storage.tls=true
#     - traefik.http.routers.excalidraw-storage.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
#     - traefik.http.routers.excalidraw-storage.service=excalidraw-storage
#     - traefik.http.services.excalidraw-storage.loadbalancer.server.scheme=${PROTOCOL_STORAGE:-http}
#     - traefik.http.services.excalidraw-storage.loadbalancer.server.port=${PORT_STORAGE:-8080}

x-room-deploy-labels: &room-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.swarm.lbswarm=${LB_SWARM:-true}
    - traefik.swarm.network=proxy
    - traefik.http.routers.excalidraw-room.entrypoints=${TRAEFIK_ENTRYPOINT:-https}
    - traefik.http.routers.excalidraw-room.rule=Host(`${DOMAIN_ROOM?domain variable not set}`)
    - traefik.http.routers.excalidraw-room.tls=true
    - traefik.http.routers.excalidraw-room.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}
    - traefik.http.routers.excalidraw-room.service=excalidraw-room
    - traefik.http.services.excalidraw-room.loadbalancer.server.scheme=${PROTOCOL_ROOM:-http}
    - traefik.http.services.excalidraw-room.loadbalancer.server.port=${PORT_ROOM:-80}

x-basic-deploy: &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  update_config:
    order: start-first
  restart_policy:
    condition: any
  resources:
    limits:
      cpus: ${RESOURCES_LIMITS_CPUS:-1}
      memory: ${RESOURCES_LIMITS_MEMORY:-500M}
    reservations:
      cpus: ${RESOURCES_RESERVATIONS_CPUS:-0.001}
      memory: ${RESOURCES_RESERVATIONS_MEMORY:-32m}

x-basic: &basic
  env_file: ${ENV_FILE:-.env}
  cap_add:
    - CHOWN
    - SETGID
    - SETUID
  cap_drop: ["ALL"]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 655360
      hard: 655360
    fsize: -1
    as: -1
  networks:
    proxy: {}
  healthcheck:
    disable: true
  restart: always

################################################################################
################################################################################
################################################################################

x-basic-env: &basic-env
  DOMAIN: ${DOMAIN?domain variable not set}
  # DOMAIN_STORAGE: ${DOMAIN_STORAGE?domain variable not set}
  DOMAIN_ROOM: ${DOMAIN_ROOM?domain variable not set}

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  excalidraw:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        <<: *basic-env
        VERSION_EXCALIDRAW: v0.18.0
    image: excalidraw:${VERSION_EXCALIDRAW:-v0.18.0}
    <<: [*basic, *basic-deploy-labels]
    deploy:
      <<: [*basic-deploy, *basic-deploy-labels]
    environment:
      <<: *basic-env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -kIf ${PROTOCOL:-http}://127.0.0.1:${PORT:-80} > /dev/null 2>&1 || exit 1",
        ]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10

  ##############################################################################
  ##############################################################################
  ##############################################################################
  excalidraw-room:
    build:
      context: https://github.com/excalidraw/excalidraw-room.git#${VERSION_EXCALIDRAW_ROOM_GIT:-master}
      dockerfile: ./Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-production}
    image: excalidraw-room:${VERSION_EXCALIDRAW_ROOM:-v0.18.0}
    <<: [*basic, *room-deploy-labels]
    deploy:
      <<: [*basic-deploy, *room-deploy-labels]
    environment:
      PORT: ${PORT_ROOM:-80}
      CORS_ORIGIN: ${DOMAIN_ROOM?domain variable not set}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider --no-check-certificate ${PROTOCOL:-http}://127.0.0.1:${PORT:-80} || exit 1",
        ]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 10

  # ##############################################################################
  # ##############################################################################
  # ##############################################################################
  # excalidraw-storage:
  #   # build:
  #   #   context: .
  #   #   dockerfile: ./Dockerfile-storage
  #   #   args:
  #   #     NODE_ENV: ${NODE_ENV:-production}
  #   image: alswl/excalidraw-storage-backend:${VERSION_EXCALIDRAW_STORAGE:-v2023.11.11}
  #   <<: [*basic, *storage-deploy-labels]
  #   deploy:
  #     <<: [*basic-deploy, *storage-deploy-labels]
  #   environment:
  #     PORT: ${PORT_STORAGE:-8080}
  #     GLOBAL_PREFIX: /api/v2
  #     STORAGE_URI: redis://valkey:6379
  #     LOG_LEVEL: warn
  #     BODY_LIMIT: 50mb
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   networks:
  #     default: {}
  #     proxy: {}

  # ##############################################################################
  # ##############################################################################
  # ##############################################################################
  # valkey:
  #   # https://hub.docker.com/r/valkey/valkey
  #   image: valkey/valkey:${VERSION_VALKEY:-8.1.0-alpine}
  #   <<: *basic
  #   deploy:
  #     <<: *basic-deploy
  #     resources:
  #       limits:
  #         cpus: ${RESOURCES_LIMITS_CPUS_VALKEY:-1}
  #         memory: ${RESOURCES_LIMITS_MEMORY_VALKEY:-128m}
  #       reservations:
  #         cpus: ${RESOURCES_RESERVATIONS_CPUS_VALKEY:-0.001}
  #         memory: ${RESOURCES_RESERVATIONS_MEMORY_VALKEY:-32m}
  #   cap_add:
  #     - SETUID
  #     - SETGID
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #     - valkey:/data
  #   command: --save 300 1 --loglevel warning
  #   healthcheck:
  #     test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
  #     start_period: 2s
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5
  #   networks:
  #     default: {}

################################################################################
################################################################################
################################################################################
networks:
  # default:
  #   driver: ${NETWORK_MODE:-overlay}
  #   attachable: true
  #   driver_opts:
  #     encrypted: "true"
  proxy:
    external: true
#
# volumes:
#   valkey: {}
