---
version: "3.8"

################################################################################
################################################################################
################################################################################

x-basic-deploy-labels:
  &basic-deploy-labels
  labels:
    - traefik.enable=true
    - traefik.docker.lbswarm=${LB_SWARM:-true}
    - traefik.docker.network=proxy
    - traefik.http.routers.owncloud.entrypoints=https
    - traefik.http.routers.owncloud.rule=Host(`${DOMAIN?domain variable not set}`)
    - traefik.http.routers.owncloud.tls=true
    - traefik.http.routers.owncloud.service=owncloud
    - traefik.http.services.owncloud.loadbalancer.server.scheme=${PROTOCOL:-http}
    - traefik.http.services.owncloud.loadbalancer.server.port=${PORT:-8080}
    - traefik.http.routers.owncloud.middlewares=${MIDDLEWARE_SECURED:-default-secured@file}

x-basic-deploy:
  &basic-deploy
  mode: replicated
  replicas: 1
  placement:
    max_replicas_per_node: 1
    constraints:
      - "node.role==${NODE_ROLE:-manager}"
      - node.platform.os == linux
  restart_policy:
    condition: on-failure
  resources:
    limits:
      # cpus: "1"
      memory: 1g
    reservations:
      cpus: "0.001"
      memory: 32M

x-basic:
  &basic
  env_file: .env
  cap_add:
    - CHOWN
    - SETGID
    - SETUID
    - DAC_OVERRIDE
  cap_drop: [ "ALL" ]
  security_opt:
    - no-new-privileges:true
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65535
      hard: 65535
    fsize: -1
    as: -1
  networks:
    default: {}
    mysql: {}
    proxy: {}
  restart: on-failure

################################################################################
################################################################################
################################################################################

services:
  ##############################################################################
  ##############################################################################
  ##############################################################################
  owncloud:
    # https://hub.docker.com/r/owncloud/server
    image: owncloud/server:${VERSION_OWNCLOUD:-10}
    <<: *basic
    deploy:
      <<: [ *basic-deploy, *basic-deploy-labels ]
    # ports:
    #   - target: ${PORT:-8080}
    #     published: ${PORT_PUBLISH:-8080}
    #     protocol: tcp
    #     mode: host
    environment:
      HTTP_PORT: ${PORT:-8080}
      OWNCLOUD_TRUSTED_DOMAINS: ${OWNCLOUD_TRUSTED_DOMAINS:-localhost}
      OWNCLOUD_DOMAIN: ${OWNCLOUD_DOMAIN:-localhost:8080}
      OWNCLOUD_ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      OWNCLOUD_ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}

      OWNCLOUD_DB_TYPE: ${OWNCLOUD_DB_TYPE:-mysql}
      OWNCLOUD_MYSQL_UTF8MB4: ${OWNCLOUD_MYSQL_UTF8MB4:-true}
      OWNCLOUD_DB_HOST: ${OWNCLOUD_DB_HOST:-mysql}
      OWNCLOUD_DB_PORT: ${OWNCLOUD_DB_PORT:-3306}
      OWNCLOUD_DB_NAME: ${OWNCLOUD_DB_NAME:-owncloud}
      OWNCLOUD_DB_USERNAME: ${OWNCLOUD_DB_USERNAME:-owncloud}
      OWNCLOUD_DB_PASSWORD: ${OWNCLOUD_DB_PASSWORD:-owncloud}

      OWNCLOUD_REDIS_ENABLED: ${OWNCLOUD_REDIS_ENABLED:-true}
      OWNCLOUD_REDIS_HOST: ${OWNCLOUD_REDIS_HOST:-redis}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - data:/mnt/data
    healthcheck:
      test: [ "CMD", "/usr/bin/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5

  ##############################################################################
  ##############################################################################
  ##############################################################################
  redis:
    # https://hub.docker.com/_/redis
    image: redis:${VERSION_REDIS:-7.0.7}
    <<: *basic
    user: "999:999"
    cap_add:
      - SETUID
      - SETGID
    deploy:
      <<: *basic-deploy
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - redis:/data
    # command: [ "--databases", "1" ]
    command:
      [
        "redis-server",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning"
      ]
    networks:
      default: {}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

################################################################################
################################################################################
################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
    attachable: true
    driver_opts:
      encrypted: "true"
  mysql:
    external: true
  proxy:
    external: true

volumes:
  data: {}
  redis: {}
